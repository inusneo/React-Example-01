{"version":3,"sources":["components/Movie.js","components/InputField.js","components/MovieForm.js","App.js","index.js"],"names":["Movie","movie","removeMovie","className","title","year","onClick","id","InputField","type","value","placeholder","onChange","errorMsg","MovieForm","addMovie","useState","movieTitle","setMovieTitle","movieYear","setMovieYear","titleError","setTitleError","yearError","setYearError","resetErrors","onSubmit","e","preventDefault","validated","validateForm","Date","now","target","App","movies","setMovies","filter","renderMovies","length","map","ReactDOM","render","document","getElementById"],"mappings":"oOAgBeA,MAdf,YAAwC,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YACtB,OACE,sBAAKC,UAAU,QAAf,UACD,sBAAKA,UAAU,cAAf,UACMF,EAAMG,MACP,sBAAMD,UAAU,aAAhB,SACGF,EAAMI,UAGX,wBAAQC,QAAS,kBAAMJ,EAAYD,EAAMM,KAAzC,8BCYSC,MArBf,YAMI,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,SACAC,EACC,EADDA,SAEA,OACE,qCACE,uBACEV,UAAU,cACVM,KAAMA,EACNC,MAAOA,EACPC,YAAaA,EACbC,SAAUA,IACV,uBACF,8BAAMC,QCkDGC,MAjEf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAqBMC,EAAc,WAClBH,EAAc,IACdE,EAAa,KAgBf,OAEE,cADA,CACA,QAAME,SAfS,SAACC,GAChBA,EAAEC,iBApBiB,WACnBH,IACA,IAAII,GAAY,EAShB,OARKZ,IACHK,EAAc,yEACdO,GAAY,GAETV,IACHK,EAAa,yEACbK,GAAY,GAEPA,EAUHC,KACFf,EAAS,CACPR,GAAIwB,KAAKC,MACT5B,MAAOa,EACPZ,KAAMc,IAERM,IA/BFP,EAAc,IACdE,EAAa,MAqCb,UACE,cAAC,EAAD,CACEX,KAAK,OACLC,MAAOO,EACPN,YAAY,2BACZC,SAAU,SAAAe,GAAC,OAAIT,EAAcS,EAAEM,OAAOvB,QACtCG,SAAUQ,IAEZ,cAAC,EAAD,CACEZ,KAAK,SACLC,MAAOS,EACPR,YAAY,2BACZC,SAAU,SAAAe,GAAC,OAAIP,EAAaO,EAAEM,OAAOvB,QACrCG,SAAUU,IAEZ,wBAAQd,KAAK,SAAb,2CCtBSyB,MApCf,WACE,MAA4BlB,mBAAS,IAArC,mBAAOmB,EAAP,KAAeC,EAAf,KAEMlC,EAAc,SAACK,GACnB6B,EAAUD,EAAOE,QAAO,SAAApC,GACtB,OAAOA,EAAMM,KAAOA,OAIlB+B,EAAeH,EAAOI,OAASJ,EAAOK,KAAI,SAAAvC,GAC9C,OACE,cAAC,EAAD,CACEA,MAAOA,EAEPC,YAAaA,GADRD,EAAMM,OAIZ,kEAUL,OACE,sBAAKJ,UAAU,MAAf,UACE,4CACA,cAAC,EAAD,CAAWY,SAVE,SAACd,GAChBmC,EAAU,GAAD,mBACJD,GADI,CAEPlC,QAQCqC,MC/BPG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ea925a44.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Movie({ movie, removeMovie }) {\r\n  return (\r\n    <div className=\"movie\">\r\n\t\t\t<div className=\"movie-title\">\r\n        {movie.title}\r\n        <span className=\"movie-year\">\r\n          {movie.year}\r\n        </span>\r\n      </div>\t\r\n      <button onClick={() => removeMovie(movie.id)}>삭제</button>\r\n\t\t</div>\r\n  );\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\n\r\nfunction InputField({\r\n  type,\r\n  value,\r\n  placeholder,\r\n  onChange,\r\n  errorMsg\r\n}) {\r\n  return (\r\n    <>\r\n      <input\r\n        className=\"movie-input\" \r\n        type={type}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n      /><br />\r\n      <div>{errorMsg}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InputField;","import React, { useState } from 'react';\r\nimport InputField from './InputField';\r\n\r\nfunction MovieForm({ addMovie }) {\r\n  const [movieTitle, setMovieTitle] = useState('');\r\n  const [movieYear, setMovieYear] = useState('');\r\n  const [titleError, setTitleError] = useState('');\r\n  const [yearError, setYearError] = useState('');\r\n  \r\n  const resetForm = () => {\r\n    setMovieTitle('');\r\n    setMovieYear('');\r\n  }\r\n\r\n  const validateForm = () => {\r\n    resetErrors();\r\n    let validated = true;\r\n    if (!movieTitle) {\r\n      setTitleError('영화제목을 입력해 주세요.');\r\n      validated = false;\r\n    }\r\n    if (!movieYear) {\r\n      setYearError('개봉년도를 입력해 주세요.');\r\n      validated = false;  \r\n    }\r\n    return validated;\r\n  };\r\n\r\n  const resetErrors = () => {\r\n    setTitleError('');\r\n    setYearError('');\r\n  };\r\n  // 2.props로 받아온 addMovie 함수를 실행하도록 한다.\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      addMovie({\r\n        id: Date.now(),\r\n        title: movieTitle,\r\n        year: movieYear\r\n      });\r\n      resetErrors();\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  return ( \r\n    // 1.영화 추가버튼을 누르면 onSubmit 함수 실행\r\n    <form onSubmit={onSubmit}> \r\n      <InputField \r\n        type=\"text\"\r\n        value={movieTitle}\r\n        placeholder=\"영화제목\"\r\n        onChange={e => setMovieTitle(e.target.value)}\r\n        errorMsg={titleError}\r\n      />\r\n      <InputField \r\n        type=\"number\"\r\n        value={movieYear}\r\n        placeholder=\"개봉년도\"\r\n        onChange={e => setMovieYear(e.target.value)}\r\n        errorMsg={yearError}\r\n      />\r\n      <button type=\"submit\">영화 추가</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MovieForm;","import React, { createFactory, useState } from 'react';\nimport './App.css';\nimport Movie from './components/Movie';\nimport MovieForm from './components/MovieForm';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  const removeMovie = (id) => {\n    setMovies(movies.filter(movie => {\n      return movie.id !== id;\n    }));\n  };\n\n  const renderMovies = movies.length ? movies.map(movie => {\n    return (\n      <Movie \n        movie={movie} \n        key={movie.id} \n        removeMovie={removeMovie}\n      />\n    );\n  }) : '추가된 영화가 없습니다.';\n\n  // 3.setMovies로 movies에 input에서 작성한 id, title, year 데이터를 가진 객체를 추가\n  const addMovie = (movie) => {\n    setMovies([\n      ...movies,\n      movie\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Movie List</h1>\n      <MovieForm addMovie={addMovie}/>\n      {renderMovies}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}